1. 瓶颈
    低并发情况，项目启动一个jar包就足够了，springboot内置的tomcat会把每一次请求的处理结果返回给用户
        用户（请求）  <---> 服务器
    并发量慢慢增大后，一台服务器不能满足需求
    所以我们横向扩展，项目搭载在不同的服务器上，但是当一个用户去直接访问多台服务器的时候，服务器之间session不共享，不是我们想实现的结果
    所以我们又需要一台代理服务器，用户直接请求代理服务器，由代理服务器将用户的请求转发到各个项目服务器（反向代理）
    不同的服务器可能配置不同，内存大小不同，我们想让代理服务器转发用户请求的时候将更多的请求转发到内存更大的服务器上（负载均衡）
2. Nginx
    Nginx，（engine,x），高性能HTTP和反向代理web服务器，同时也提供IMAP/POP3/SMTP等邮件服务。
    占用内存小，并发能力强，支持50,000个并发连接数的响应
3. 作用
    1Http代理，反向代理
        正向代理：
            比如VPN, 客户端（手机）通过代理服务器（VPN）访问服务器（外网），VPN代理了客户端
        反向代理：
            比如访问百度，客户端（手机）通过反向代理服务器（www.baidu.com），访问服务器（百度的服务器）
    2负载均衡策略：
        内置策略：
            轮询，挨个轮流
            加权轮询，加权重以后轮流
            ipHash，对ip地址进行hash，将同一个客户端的请求只发送给特定的服务器进行处理，session不会丢失
        扩展策略：
            天马行空
    3动静分离：
        有些请求需要后端处理，也有一些请求不需要经过后台处理(比如前端的静态文件)，nginx提供了一个静态资源服务器，nginx自己加载，提升访问速度。
4.nginx命令：
    ./nginx 启动
    ./nginx -s stop    停止
    ./nginx -s quit    安全退出
    ./nginx -s reload  重新加载配置文件



