1.什么是JUC？
    Java.util.concurrent包
Java.util.concurrent.Callable
Java.util.concurrent.Lock

2.线程和进程？
    1.进程：一个程序，一个进程往往包含多个线程，且至少包含一个线程。
    Java默认有几个线程，2个，main和GC
    2.线程：
    JAVA中开启线程的三种方式，Thread、Runnable、Callable
    JAVA真的能开启线程吗？JAVA中启动线程是通过 private native void start0();调用的底层的C++，所以JAVA无法直接操作硬件

3.并发、并行
并发，多线程操作同一个资源，多个线程在同一个时间间隔发生，一台处理器同时处理多个任务
并行，多个线程同时运行，多个处理器同时处理多个任务
并发编程的本质：充分利用CPU的资源

4.线程有几个状态  6个 Thread.State枚举类
    // 新建 NEW,
    // 运行 RUNNABLE,
    // 阻塞 BLOCKED,
    // 等待，死等 WAITING,
    // 超时等待 TIMED_WAITING,
    // 终止 TERMINATED;

5.wait\sleep的区别
    1.java.lang.Object.wait() java.lang.Thread.sleep(long)
    2.wait会释放锁，sleep会抱着锁睡觉
    3.适用范围，wait只能在同步代码块中用，sleep可以任何地方睡
    4.都需要捕获线程中断异常
    5.wait需要被唤醒、sleep自己可以醒

6.Lock锁
    传统的synchronized，排队
    java.util.concurrent.locks.Lock接口，有三个实现类
        1.java.util.concurrent.locks.ReentrantLock.ReentrantLock(); 常用的可重入锁
        2.ReentrantReadWriteLock.ReadLock 读锁
        3.ReentrantReadWriteLock.WriteLock 写锁
    // 可重入锁构造方法，默认是非公平锁，可以指定boolean值
    public ReentrantLock(boolean fair) {
        sync = fair ? new FairSync() : new NonfairSync();
    }
    公平锁：先来后到
    非公平锁：可能发生插队

7.synchronized和Lock区别
    1.synchronized 内置的JAVA关键字、Lock是一个JAVA类
    2.synchronized 无法判断获取锁的状态，Lock可以判断是否获取到的锁
    3.synchronized 会自动释放锁，而lock必须要手动释放锁，如果不释放的话就形成死锁
    4.synchronized 线程1获得锁后，线程2会一直等待；而lock就不一定会一直等待 boolean b = lock.tryLock();
    5.synchronized 可重入锁，不可中断的，非公平锁；Lock 可重入锁，可中断的，公平不公平自己设置；
    6.synchronized 适合锁少量的代码同步问题，Lock适合锁大量的代码

8.生产者，消费者问题
    1.synchronized版本，通过wait notify实现
    2.juc版本  lock


8.锁是什么，如何判断锁的是谁
    无非两种 new 或者 static静态加载的
    new 是具体的对象 锁对象锁的是对象的调用者，new多个对象就相当于有多把锁互不相干
    static 锁的是类模板，类模板全局唯一

9.Callable 创建线程的第三种方式
    1.可以有返回值
    2.可以抛出异常
    3.启动方法不同，call()
    使用方式，通过适配器模式，
        1 Thread(Runnable) ->
        2 new FutureTask(Callable) implements RunnableFuture implements Runnable and Future ->
        3 Thread(FutureTask)
    Callable运行有缓存，能抛出异常且有返回值，但是如需要返回值的话调用get()方法可能需要等待，等待Callable线程执行完毕

10.常用的三个辅助类
    1.CountDownLatch 计数器 - 1
    2.CyclicBarrier  计数器 + 1
    3.Semaphore 信号量 许可证